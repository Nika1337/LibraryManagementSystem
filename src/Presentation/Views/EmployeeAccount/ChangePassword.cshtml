@model Nika1337.Library.Presentation.Models.EmployeeAccount.ChangePasswordViewModel

@{
    ViewData["Title"] = "Change Password";
}

<div class="container pt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <h5 class="card-header">Change Password</h5>
                <div class="card-body">
                    <form asp-controller="EmployeeAccount" asp-action="ChangePassword" method="post" class="needs-validation" novalidate>

                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label"></label>
                            <input asp-for="CurrentPassword" class="form-control" type="password" required>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label"></label>
                            <input asp-for="NewPassword" class="form-control" type="password" required>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="RepeatPassword" class="form-label"></label>
                            <input asp-for="RepeatPassword" class="form-control" type="password" required>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-dark">Change Password</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

 @section Scripts {
      <partial name="_ValidationScriptsPartial" />
      <script>
          (function () {
              'use strict';
              window.addEventListener('load', function () {
                  var forms = document.getElementsByClassName('needs-validation');
                  Array.prototype.filter.call(forms, function (form) {
                      form.addEventListener('submit', function (event) {
                          if (form.checkValidity() === false) {
                              event.preventDefault();
                              event.stopPropagation();
                          }
                          form.classList.add('was-validated');
                      }, false);
                  });
              }, false);
          })();
      </script>
 }
