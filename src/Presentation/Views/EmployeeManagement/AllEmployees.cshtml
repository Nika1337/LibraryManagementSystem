@model IEnumerable<Nika1337.Library.Presentation.Models.EmployeeManagement.EmployeeViewModel>

@{
    ViewData["Title"] = "Employees";
}

<div class="container-fluid p-5">
    <h2 class="text-center m-3">@ViewData["Title"]</h2>
    <div class="row justify-content-between">
        <div class="col-md-6" style="width: fit-content">
            <div class="dropdown mb-4" style="width: fit-content">
                <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" style="min-width: 200px">
                    <span id="sortLabel">
                        @(ViewData["SortedBy"] switch
                        {
                            "username" => "Username: A - Z",
                            "usernameDesc" => "Username: Z - A",
                            "firstName" => "First name: A - Z",
                            "firstNameDesc" => "First name: Z - A",
                            "lastName" => "Last name: A - Z",
                            "lastNameDesc" => "Last name: Z - A",
                            "startDate" => "Start Date: Ascending",
                            "startDateDesc" => "Start Date: Descending",
                            _ => "Sort"
                        })
                    </span>
                </button>
                <ul class="dropdown-menu" style="width: fit-content">
                    <li><a class="dropdown-item sort-option" data-sort="username">Username: A - Z</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="usernameDesc">Username: Z - A</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="firstName">First name: A - Z</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="firstNameDesc">First name: Z - A</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="lastName">Last name: A - Z</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="lastNameDesc">Last name: Z - A</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="startDate">Start Date: Ascending</a></li>
                    <li><a class="dropdown-item sort-option" data-sort="startDateDesc">Start Date: Descending</a></li>
                </ul>
            </div>
        </div>
        <div class="col-md-6" style="width: fit-content">
            <div class="row  mb-4">
                <div class="col-md-8" style="width: fit-content">
                    <div class="row flex-nowrap">
                        <div class="col-md-8" style="width: fit-content">
                            <div class="input-group">
                                <input type="text" id="searchTerm" class="form-control" placeholder="Search employees...">
                                <button class="btn btn-outline-secondary" type="button" onclick="searchEmployees()">Search</button>
                            </div>
                        </div>
                        <div class="col-md-4 d-flex justify-content-center align-items-center" style="width: fit-content">
                            <i id="cardViewIcon" class="fas fa-th-large toggle-icon mx-2" onclick="toggleView('card')" title="Card View"></i>
                            <i id="tableViewIcon" class="fas fa-table toggle-icon mx-2" onclick="toggleView('table')" title="Table View"></i>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 d-flex justify-content-center align-items-center" style="width: fit-content">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="includeTerminated" onclick="filterEmployees()" checked>
                        <label class="form-check-label" for="includeTerminated">Include Terminated</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="cardView" class="row d-none">
        @foreach (var employee in Model)
        {
            <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3 mb-4 employee-card" data-username="@employee.Username" data-firstname="@employee.FirstName" data-lastname="@employee.LastName" data-startdate="@employee.StartDate" data-active="@employee.IsActive">
                <div class="card h-100 shadow-sm d-flex flex-column">
                    <div class="card-header d-flex justify-content-between align-items-center text-white">
                        <span class="employee-name">@employee.FirstName @employee.LastName</span>
                        @if (employee.IsActive)
                        {
                            <span class="badge bg-success badge-sm">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger badge-sm">Terminated</span>
                        }
                    </div>
                    <div class="card-body d-flex flex-column justify-content-between">
                        <div class="property">
                            <span class="text-muted">Username:</span>
                            <span>@employee.Username</span>
                        </div>
                        <div class="property">
                            <span class="text-muted">Email:</span>
                            <span>@(employee.Email ?? "NaN")</span>
                        </div>
                        <div class="property">
                            <span class="text-muted">Phone Number:</span>
                            <span>@(employee.PhoneNumber ?? "NaN")</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="property">
                                <span class="text-muted">Date of Birth:</span>
                                <span>@employee.DateOfBirth.ToShortDateString()</span>
                            </div>
                            <div class="property">
                                <span class="text-muted">Start Date:</span>
                                <span>@employee.StartDate.ToShortDateString()</span>
                            </div>
                        </div>
                        <div class="mt-auto">
                            <a asp-action="Profile" asp-controller="EmployeeManagement" asp-route-username="@employee.Username" class="btn btn-dark btn-sm btn-block">View Profile</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="tableView">
        <div class="table-responsive d-flex justify-content-center">
            <table id="employeeTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Date of Birth</th>
                        <th>Start Date</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in Model)
                    {
                        <tr class="employee-row" data-username="@employee.Username" data-firstname="@employee.FirstName" data-lastname="@employee.LastName" data-startdate="@employee.StartDate" data-active="@employee.IsActive">
                            <td>@employee.FirstName</td>
                            <td>@employee.LastName</td>
                            <td>@employee.Username</td>
                            <td>@(employee.Email ?? "NaN")</td>
                            <td>@(employee.PhoneNumber ?? "NaN")</td>
                            <td>@employee.DateOfBirth.ToShortDateString()</td>
                            <td>@employee.StartDate.ToShortDateString()</td>
                            <td>
                                @if (employee.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Terminated</span>
                                }
                            </td>
                            <td>
                                <a asp-action="Profile" asp-controller="EmployeeManagement" asp-route-username="@employee.Username" class="btn btn-dark btn-sm">View Profile</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="myfab-container">
        <a asp-action="RegisterEmployee" asp-controller="EmployeeManagement" class="btn btn-primary btn-lg shadow-sm myfab">
            Register Employee
        </a>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tableViewIcon = document.getElementById('tableViewIcon');
            var cardViewIcon = document.getElementById('cardViewIcon');
            tableViewIcon.classList.add('selected');
        });

        function toggleView(view) {
            var cardView = document.getElementById('cardView');
            var tableView = document.getElementById('tableView');
            var cardViewIcon = document.getElementById('cardViewIcon');
            var tableViewIcon = document.getElementById('tableViewIcon');

            if (view === 'card') {
                cardView.classList.remove('d-none');
                tableView.classList.add('d-none');
                cardViewIcon.classList.add('selected');
                tableViewIcon.classList.remove('selected');
            } else if (view === 'table') {
                cardView.classList.add('d-none');
                tableView.classList.remove('d-none');
                cardViewIcon.classList.remove('selected');
                tableViewIcon.classList.add('selected');
            }
        }

        function searchEmployees() {
            filterEmployees();
        }

        function filterEmployees() {
            var searchTerm = document.getElementById('searchTerm').value.toLowerCase();
            var includeTerminated = document.getElementById('includeTerminated').checked;
            var employeeCards = document.querySelectorAll('.employee-card');
            var employeeRows = document.querySelectorAll('.employee-row');

            employeeCards.forEach(function (card) {
                var name = card.dataset.firstname.toLowerCase() + ' ' + card.dataset.lastname.toLowerCase();
                var username = card.dataset.username.toLowerCase();
                var isActive = card.dataset.active === 'True';
                if ((name.includes(searchTerm) || username.includes(searchTerm)) && (includeTerminated || isActive)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });

            employeeRows.forEach(function (row) {
                var name = row.dataset.firstname.toLowerCase() + ' ' + row.dataset.lastname.toLowerCase();
                var username = row.dataset.username.toLowerCase();
                var isActive = row.dataset.active === 'True';
                if ((name.includes(searchTerm) || username.includes(searchTerm)) && (includeTerminated || isActive)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        document.querySelectorAll('.sort-option').forEach(function (element) {
            element.addEventListener('click', function () {
                var sortType = element.getAttribute('data-sort');
                var sortLabel = document.getElementById('sortLabel');
                sortLabel.innerText = element.innerText;
                sortEmployees(sortType);
            });
        });

        function sortEmployees(sortType) {
            var employeeCards = Array.from(document.querySelectorAll('.employee-card'));
            var employeeRows = Array.from(document.querySelectorAll('.employee-row'));

            var sortFunction = function (a, b) {
                var aData, bData;
                switch (sortType) {
                    case 'username':
                        aData = a.dataset.username.toLowerCase();
                        bData = b.dataset.username.toLowerCase();
                        return aData.localeCompare(bData);
                    case 'usernameDesc':
                        aData = a.dataset.username.toLowerCase();
                        bData = b.dataset.username.toLowerCase();
                        return bData.localeCompare(aData);
                    case 'firstName':
                        aData = a.dataset.firstname.toLowerCase();
                        bData = b.dataset.firstname.toLowerCase();
                        return aData.localeCompare(bData);
                    case 'firstNameDesc':
                        aData = a.dataset.firstname.toLowerCase();
                        bData = b.dataset.firstname.toLowerCase();
                        return bData.localeCompare(aData);
                    case 'lastName':
                        aData = a.dataset.lastname.toLowerCase();
                        bData = b.dataset.lastname.toLowerCase();
                        return aData.localeCompare(bData);
                    case 'lastNameDesc':
                        aData = a.dataset.lastname.toLowerCase();
                        bData = b.dataset.lastname.toLowerCase();
                        return bData.localeCompare(aData);
                    case 'startDate':
                        aData = new Date(a.dataset.startdate);
                        bData = new Date(b.dataset.startdate);
                        return aData - bData;
                    case 'startDateDesc':
                        aData = new Date(a.dataset.startdate);
                        bData = new Date(b.dataset.startdate);
                        return bData - aData;
                    default:
                        return 0;
                }
            };

            employeeCards.sort(sortFunction);
            employeeRows.sort(sortFunction);

            var cardView = document.getElementById('cardView');
            cardView.innerHTML = '';
            employeeCards.forEach(function (card) {
                cardView.appendChild(card);
            });

            var tableBody = document.querySelector('#employeeTable tbody');
            tableBody.innerHTML = '';
            employeeRows.forEach(function (row) {
                tableBody.appendChild(row);
            });
        }
    </script>
}

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
    <style>
        .card {
            min-height: 100%;
            border-radius: 10px;
        }

        .card-header {
            font-size: 1.2rem;
            font-weight: bold;
            padding: 10px;
            border-radius: 10px 10px 0 0;
        }

        .employee-name {
            color: black;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 250px;
            display: block;
        }

        .property {
            margin-bottom: 10px;
        }

        .property span {
            display: block;
        }

        .text-muted {
            color: #6c757d;
            font-size: 0.8rem;
        }

        .btn-block {
            width: 100%;
        }

        .container {
            margin-top: 30px;
        }

        .card {
            transition: transform 0.2s;
        }

        .card:hover {
            transform: scale(1.02);
        }

        .toggle-icon {
            font-size: 1.5rem;
            cursor: pointer;
        }

        .toggle-icon.selected {
            color: #784EF1;
        }

        .myfab-container {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 1000;
        }

        .myfab {
            min-width: 150px;
            height: 60px;
            font-size: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);
        }
    </style>
}
